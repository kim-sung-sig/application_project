plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	// config client
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// jdbc
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// queryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// postgresql
	runtimeOnly 'org.postgresql:postgresql'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// rabbitmq
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'

	// webFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'io.projectreactor:reactor-test'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// spring oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.batch:spring-batch-test'

	// websocker
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// CODEC BASE62
	implementation 'org.unbroken-dome.base62:base62:1.1.0'

	// https://mvnrepository.com/artifact/com.github.f4b6a3/uuid-creator
	implementation 'com.github.f4b6a3:uuid-creator:6.0.0'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
